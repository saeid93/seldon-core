buildPack: none
pipelineConfig:
  pipelines:
    pullRequest:
      pipeline:
        agent:
          image: seldonio/core-builder:0.3
        stages:
        - name: build-and-test
          parallel:
          - agent:
              image: seldonio/python-builder:0.2
            name: seldon-python
            steps:
            - name: test-python
              args:
              - -C python
              - update_package
              - install
              - test
              command: make
            - name: test-python-tf
              args:
              - -C python
              - update_package
              - install-tf
              - test
              command: make
          - name: seldon-engine
            agent:
              image: seldonio/core-builder:0.4
            steps:
            - name: test-engine
              args:
              - -C engine
              - -f Makefile.ci
              - build_jar
              command: make
          - name: build-and-push-images
            agent:
              image: seldonio/core-builder:0.4
            steps:
            - name: build-and-push-engine
              command: make
              args:
              - -C engine
              - build_image
              - push_to_registry
            - name: build-and-push-python-wrapper
              command: cd
              args:
              - wrappers/s2i/python/build_scripts && 
              - bash
              - ./build_all.sh &&
              - bash
              - ./push_all.sh
            - name: build-and-push-operator
              command: make
              args:
              - -C operator
              - docker-build
              - docker-push
            - name: build-and-push-model-servers
              command: cd
              args:
              - wrappers/s2i/python/build_scripts && 
              - bash
              - ./build_all.sh &&
              - bash
              - ./push_all.sh
    release:
      pipeline:
        agent:
          image: seldonio/core-builder:0.4
        stages:
          - name: end-to-end
            steps:
            - name: test-end-to-end
              command: cd
              args:
              - testing/scripts &&
              - bash
              - kind_test_all.sh
            options:
              containerOptions:
                volumeMounts:
                  - mountPath: /lib/modules
                    name: modules
                    readOnly: true
                  - mountPath: /sys/fs/cgroup
                    name: cgroup
                  - name: dind-storage
                    mountPath: /var/lib/docker
                resources:
                  requests:
                    cpu: 1
                    memory: 4000Mi
                securityContext:
                  privileged: true
                imagePullPolicy: Always
              volumes:
                - name: modules
                  hostPath:
                    path: /lib/modules
                    type: Directory
                - name: cgroup
                  hostPath:
                    path: /sys/fs/cgroup
                    type: Directory
                - name: dind-storage
                  emptyDir: {}

